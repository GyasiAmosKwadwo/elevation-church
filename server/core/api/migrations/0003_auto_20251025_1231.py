# Generated by Django 5.2.6 on 2025-10-25 12:31

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0002_alter_devotion_thumbnail_alter_event_flyer_and_more'),
    ]

    operations = [
        migrations.RunSQL(
            'DROP TABLE IF EXISTS api_announcement CASCADE;',
            reverse_sql='CREATE TABLE api_announcement (id uuid PRIMARY KEY, title varchar(200), content text, date timestamp with time zone);'
        ),
        migrations.RunSQL(
            'DROP TABLE IF EXISTS api_event CASCADE;',
            reverse_sql='CREATE TABLE api_event (id uuid PRIMARY KEY, name varchar(200), description varchar(700), flyer varchar(100), location varchar(300), date date, days integer, start_time time, end_time time, created_at timestamp with time zone);'
        ),
        migrations.RunSQL(
            'DROP TABLE IF EXISTS api_live_stream CASCADE;',
            reverse_sql='CREATE TABLE api_live_stream (id uuid PRIMARY KEY, title varchar(200), description varchar(700), stream_link varchar(200), status varchar(10), reactions integer, comments text, date timestamp with time zone);'
        ),
        migrations.RunSQL(
            'DROP TABLE IF EXISTS api_prayer_request CASCADE;',
            reverse_sql='CREATE TABLE api_prayer_request (id uuid PRIMARY KEY, name varchar(200), subject text, date timestamp with time zone);'
        ),
        migrations.RunSQL(
            'DROP TABLE IF EXISTS api_reflection CASCADE;',
            reverse_sql='CREATE TABLE api_reflection (id uuid PRIMARY KEY, name varchar(200), content text, likes integer, comments text, date timestamp with time zone);'
        ),
        migrations.RunSQL(
            'DROP TABLE IF EXISTS api_resource CASCADE;',
            reverse_sql='CREATE TABLE api_resource (id uuid PRIMARY KEY, name varchar(300), purchase_link varchar(200), price numeric(8,2));'
        ),
        migrations.RunSQL(
            'DROP TABLE IF EXISTS api_devotion CASCADE;',
            reverse_sql='CREATE TABLE api_devotion (id uuid PRIMARY KEY, title varchar(200), Bible_verse jsonb, content text, thumbnail varchar(100), date timestamp with time zone);'
        ),
        migrations.RunSQL(
            'DROP TABLE IF EXISTS api_series CASCADE;',
            reverse_sql='CREATE TABLE api_series (id uuid PRIMARY KEY, title varchar(200), description varchar(700), image varchar(100), likes integer, date timestamp with time zone);'
        ),
        migrations.RunSQL(
            'DROP TABLE IF EXISTS api_sermon CASCADE;',
            reverse_sql='CREATE TABLE api_sermon (id uuid PRIMARY KEY, title varchar(200), description varchar(700), video_link varchar(200), preacher varchar(100), podcast_link varchar(200), likes integer, comments text, date timestamp with time zone, resource_id uuid, series_id uuid);'
        ),
        migrations.RunSQL(
            'DROP TABLE IF EXISTS api_devotion_reflection CASCADE;',
            reverse_sql='CREATE TABLE api_devotion_reflection (id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, devotion_id uuid, reflection_id uuid);'
        ),
        migrations.RunSQL(
            'DROP TABLE IF EXISTS api_series_thoughts CASCADE;',
            reverse_sql='CREATE TABLE api_series_thoughts (id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, series_id uuid, reflection_id uuid);'
        ),
        migrations.RunSQL(
            'DROP TABLE IF EXISTS api_series_available_sermons CASCADE;',
            reverse_sql='CREATE TABLE api_series_available_sermons (id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, series_id uuid, sermon_id uuid);'
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Enter the title of the announcement', max_length=200)),
                ('content', models.TextField(help_text='Enter the content of the announcement')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='Congregational meeting', help_text='Enter the name of the event', max_length=200)),
                ('description', models.CharField(help_text='Enter a brief description of the event', max_length=700)),
                ('flyer', models.ImageField(default='https://www.freepik.com/free-photo/empty-christian-church-building_144641216.htm#fromView=search&page=1&position=1&uuid=7df8b822-77d5-4328-b319-154627617e08&query=church', help_text='Upload a flyer for the event', upload_to='event_flyers/')),
                ('location', models.CharField(help_text='Enter the location of the event', max_length=300)),
                ('date', models.DateField(help_text='Enter the start date of the event')),
                ('days', models.IntegerField(default=1, help_text='Number of days the event lasts')),
                ('start_time', models.TimeField(blank=True, help_text='Enter the start time of the event', null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Live_stream',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Enter the title of the live stream', max_length=200)),
                ('description', models.CharField(help_text='Enter a brief description of the live stream', max_length=700)),
                ('stream_link', models.URLField(default='https://www.youtube.com/watch?v=sjkrrmBnpGE&t=11s', help_text='Enter the stream link of the live stream')),
                ('status', models.CharField(choices=[('live', 'Live'), ('upcoming', 'Upcoming'), ('past', 'Past')], default='upcoming', help_text='Status of the live stream', max_length=10)),
                ('reactions', models.IntegerField(default=0, help_text='Number of reactions for this live stream')),
                ('comments', models.TextField(blank=True, help_text='Comments on the live stream')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Prayer_request',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Enter your name here', max_length=200)),
                ('subject', models.TextField(help_text='Enter the content of your prayer request')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reflection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Enter your name here', max_length=200)),
                ('content', models.TextField(help_text='Enter the content of the reflection')),
                ('likes', models.IntegerField(default=0, help_text='Number of likes for this reflection')),
                ('comments', models.TextField(blank=True, help_text='Comments on the reflection')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Enter the name of the resource', max_length=300)),
                ('purchase_link', models.URLField(help_text='Enter the purchase link of the resource')),
                ('price', models.DecimalField(decimal_places=2, help_text='Enter the price of the resource', max_digits=8)),
            ],
        ),
        migrations.CreateModel(
            name='Devotion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Enter the title of the devotional', max_length=200)),
                ('Bible_verse', models.JSONField(default=dict, help_text="Enter the Bible verse as a JSON object with 'reference' and 'verse_content'")),
                ('content', models.TextField(help_text='Enter the content of the devotional')),
                ('thumbnail', models.ImageField(default='https://www.freepik.com/free-photo/young-woman-being-spiritual-home_12690260.htm', help_text='Upload a thumbnail for the devotional', upload_to='devotion_thumbnails/')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('reflection', models.ManyToManyField(blank=True, help_text='Add reflections for this devotional', related_name='devotion_reflections', to='api.reflection')),
            ],
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Enter the title of the series', max_length=200)),
                ('description', models.CharField(help_text='Enter a brief description of the series', max_length=700)),
                ('image', models.ImageField(default='https://www.freepik.com/free-photo/woman-praying-her-loved-ones_12690245.htm#fromView=search&page=1&position=49&uuid=b8c3c77b-8227-4daf-b533-f58011aa9874&query=bible+studies', help_text='Upload an image for the series', upload_to='series_images/')),
                ('likes', models.IntegerField(default=0, help_text='Number of likes for this Series')),
                ('date', models.DateTimeField(auto_now_add=True, help_text='Date the series was created')),
                ('thoughts', models.ManyToManyField(blank=True, help_text='Add thoughts on this series', related_name='series_thoughts', to='api.reflection')),
            ],
            options={
                'verbose_name_plural': 'Series',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Sermon',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Enter the title of the sermon', max_length=200)),
                ('description', models.CharField(help_text='Enter a brief description of the sermon', max_length=700)),
                ('video_link', models.URLField(default='https://www.youtube.com/watch?v=sjkrrmBnpGE&t=11s', help_text='Enter the video link of the sermon')),
                ('preacher', models.CharField(default='Pastor Obed Agyiri', help_text='Enter the name of the preacher', max_length=100)),
                ('podcast_link', models.URLField(blank=True, help_text='Enter the podcast link of the sermon')),
                ('likes', models.IntegerField(default=0, help_text='Number of likes for this reflection')),
                ('comments', models.TextField(blank=True, help_text='Comments on the reflection')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('resource', models.ForeignKey(help_text='Enter any additional resources for the sermon', null=True, on_delete=models.CASCADE, related_name='sermon', to='api.resource')),
                ('series', models.ForeignKey(help_text='Select the series this sermon belongs to', null=True, on_delete=models.CASCADE, related_name='sermon_series', to='api.series')),
            ],
        ),
        migrations.AddField(
            model_name='series',
            name='available_sermons',
            field=models.ManyToManyField(blank=True, help_text='Select sermons that belong to this series', related_name='series_sermons', to='api.sermon'),
        ),
    ]
